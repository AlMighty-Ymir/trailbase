[workspace]
resolver = "2"
members = [
  "client/trailbase-rs",
  "docs/examples/record_api_rs",
  "examples/custom-binary",
  "trailbase-cli",
  "trailbase-core",
  "trailbase-extension",
  "trailbase-sqlite",
  "vendor/sqlean",
]
default-members = [
  "client/trailbase-rs",
  "trailbase-cli",
  "trailbase-core",
  "trailbase-extension",
  "trailbase-sqlite",
]
exclude = [
  "vendor/refinery",
  "vendor/rustc_tools_util",
]

# https://doc.rust-lang.org/cargo/reference/profiles.html
[profile.release]
panic = "unwind"
opt-level = 3
# PGO doesn't work with LTO: https://github.com/llvm/llvm-project/issues/57501
# lto = "off"
lto = true
codegen-units = 1

# Workaround for https://github.com/gwenn/lemon-rs/issues/78. sqlite3-parser
# requires 1+MB stack frames to parse trivial SQL statements, which is larger
# than Window's default stack size of 1MB. This is due to the rust compiler not
# overlapping stack variables of disjoint branches in dev mode and instead
# allocating them all.
[profile.dev.package.sqlite3-parser]
opt-level = 1

[workspace.dependencies]
trailbase-refinery-core = { path = "vendor/refinery/refinery_core", version = "0.8.16", default-features = false, features = ["rusqlite-bundled"] }
trailbase-refinery-macros = { path = "vendor/refinery/refinery_macros", version = "0.8.15" }
libsqlite3-sys = { version = "0.31.0", features = ["bundled"] }
rusqlite = { version = "^0.33.0", default-features = false, features = [
    "bundled",
    "column_decltype",
    "load_extension",
    "modern_sqlite",
    "functions",
    "limits",
    "backup",
    "hooks",
    "preupdate_hook",
] }
trailbase-sqlean = { path = "vendor/sqlean", version = "0.0.2" }
trailbase-extension = { path = "trailbase-extension", version = "0.2.0" }
trailbase-sqlite = { path = "trailbase-sqlite", version = "0.2.0" }
trailbase = { path = "trailbase-core", version = "0.1.0" }
uuid = { version = "=1.12.1", default-features = false, features = ["std", "v4", "v7", "serde"] }
